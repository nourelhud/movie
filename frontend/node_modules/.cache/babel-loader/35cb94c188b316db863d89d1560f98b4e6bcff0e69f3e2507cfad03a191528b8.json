{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import \"./PostList.css\";\n\n// const PostList = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [sortBy, setSortBy] = useState(\"date\");\n\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       const response = await axios.get(\n//         `http://localhost:3000/api/posts?sort=${sortBy}`\n//       );\n//       setPosts(response.data);\n//     };\n//     fetchPosts();\n//   }, [sortBy]);\n\n//   const handleSortByChange = (event) => {\n//     setSortBy(event.target.value);\n//   };\n\n//   const handlePostCreated = (newPost) => {\n//     setPosts([...posts, newPost]);\n//   };\n\n//   return (\n//     <div className=\"post-list\">\n//       <div className=\"sort-by\">\n//         <label>Sort by:</label>\n//         <select value={sortBy} onChange={handleSortByChange}>\n//           <option value=\"date\">Date</option>\n//           <option value=\"popularity\">Popularity</option>\n//           <option value=\"category\">Category</option>\n//         </select>\n//       </div>\n//       <CreatePost onPostCreated={handlePostCreated} />\n//       <div className=\"posts\">\n//         {posts.map((post) => (\n//           <Post key={post.id} post={post} />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// const Post = ({ post }) => {\n//   const [comments, setComments] = useState([]);\n//   const [commentText, setCommentText] = useState(\"\");\n\n//   useEffect(() => {\n//     const fetchComments = async () => {\n//       const response = await axios.get(\n//         `http://localhost:3000/api/posts/${post.id}/comments`\n//       );\n//       setComments(response.data);\n//     };\n//     fetchComments();\n//   }, [post.id]);\n\n//   const handleCommentTextChange = (event) => {\n//     setCommentText(event.target.value);\n//   };\n\n//   const handleCommentCreated = (newComment) => {\n//     setComments([...comments, newComment]);\n//     setCommentText(\"\");\n//   };\n\n//   const handleSubmitComment = async (event) => {\n//     event.preventDefault();\n//     const url = `http://localhost:3000/api/posts/${post.id}/comments`;\n//     const data = { text: commentText };\n//     const response = await axios.post(url, data);\n//     handleCommentCreated(response.data);\n//   };\n\n//   return (\n//     <div className=\"post\">\n//       <h2>{post.title}</h2>\n//       <img src={post.imageUrl} alt={post.title} />\n//       <p>{post.text}</p>\n//       <div className=\"tags\">\n//         {post.tags.map((tag) => (\n//           <span key={tag}>{tag}</span>\n//         ))}\n//       </div>\n//       <form onSubmit={handleSubmitComment}>\n//         <label htmlFor=\"commentText\">Comment:</label>\n//         <input\n//           type=\"text\"\n//           id=\"commentText\"\n//           value={commentText}\n//           onChange={handleCommentTextChange}\n//         />\n//         <button type=\"submit\">Add comment</button>\n//       </form>\n//       <CommentList comments={comments} />\n//     </div>\n//   );\n// };\n\n// const CommentsList = ({ comments }) => {\n//   const [newComment, setNewComment] = useState(\"\");\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const url = `http://localhost:8000/api/posts/${postId}/comments/`;\n//     const data = { content: newComment };\n//     const headers = {\n//       \"Content-Type\": \"application/json\",\n//       Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n//     };\n//     try {\n//       const response = await axios.post(url, data, { headers });\n//       console.log(response.data);\n//       setComments([...comments, response.data]);\n//       setNewComment(\"\");\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <textarea\n//           value={newComment}\n//           onChange={(event) => setNewComment(event.target.value)}\n//         />\n//         <button type=\"submit\">Add Comment</button>\n//       </form>\n//       {comments.map((comment) => (\n//         <Comment key={comment.id} comment={comment} />\n//       ))}\n//     </div>\n//   );\n// };","map":{"version":3,"names":[],"sources":["C:/Users/twta8/OneDrive/Desktop/final project/frontend/src/components/Community.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./PostList.css\";\r\n\r\n// const PostList = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [sortBy, setSortBy] = useState(\"date\");\r\n\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/api/posts?sort=${sortBy}`\r\n//       );\r\n//       setPosts(response.data);\r\n//     };\r\n//     fetchPosts();\r\n//   }, [sortBy]);\r\n\r\n//   const handleSortByChange = (event) => {\r\n//     setSortBy(event.target.value);\r\n//   };\r\n\r\n//   const handlePostCreated = (newPost) => {\r\n//     setPosts([...posts, newPost]);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"post-list\">\r\n//       <div className=\"sort-by\">\r\n//         <label>Sort by:</label>\r\n//         <select value={sortBy} onChange={handleSortByChange}>\r\n//           <option value=\"date\">Date</option>\r\n//           <option value=\"popularity\">Popularity</option>\r\n//           <option value=\"category\">Category</option>\r\n//         </select>\r\n//       </div>\r\n//       <CreatePost onPostCreated={handlePostCreated} />\r\n//       <div className=\"posts\">\r\n//         {posts.map((post) => (\r\n//           <Post key={post.id} post={post} />\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const Post = ({ post }) => {\r\n//   const [comments, setComments] = useState([]);\r\n//   const [commentText, setCommentText] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     const fetchComments = async () => {\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/api/posts/${post.id}/comments`\r\n//       );\r\n//       setComments(response.data);\r\n//     };\r\n//     fetchComments();\r\n//   }, [post.id]);\r\n\r\n//   const handleCommentTextChange = (event) => {\r\n//     setCommentText(event.target.value);\r\n//   };\r\n\r\n//   const handleCommentCreated = (newComment) => {\r\n//     setComments([...comments, newComment]);\r\n//     setCommentText(\"\");\r\n//   };\r\n\r\n//   const handleSubmitComment = async (event) => {\r\n//     event.preventDefault();\r\n//     const url = `http://localhost:3000/api/posts/${post.id}/comments`;\r\n//     const data = { text: commentText };\r\n//     const response = await axios.post(url, data);\r\n//     handleCommentCreated(response.data);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"post\">\r\n//       <h2>{post.title}</h2>\r\n//       <img src={post.imageUrl} alt={post.title} />\r\n//       <p>{post.text}</p>\r\n//       <div className=\"tags\">\r\n//         {post.tags.map((tag) => (\r\n//           <span key={tag}>{tag}</span>\r\n//         ))}\r\n//       </div>\r\n//       <form onSubmit={handleSubmitComment}>\r\n//         <label htmlFor=\"commentText\">Comment:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"commentText\"\r\n//           value={commentText}\r\n//           onChange={handleCommentTextChange}\r\n//         />\r\n//         <button type=\"submit\">Add comment</button>\r\n//       </form>\r\n//       <CommentList comments={comments} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const CommentsList = ({ comments }) => {\r\n//   const [newComment, setNewComment] = useState(\"\");\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     const url = `http://localhost:8000/api/posts/${postId}/comments/`;\r\n//     const data = { content: newComment };\r\n//     const headers = {\r\n//       \"Content-Type\": \"application/json\",\r\n//       Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\r\n//     };\r\n//     try {\r\n//       const response = await axios.post(url, data, { headers });\r\n//       console.log(response.data);\r\n//       setComments([...comments, response.data]);\r\n//       setNewComment(\"\");\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <textarea\r\n//           value={newComment}\r\n//           onChange={(event) => setNewComment(event.target.value)}\r\n//         />\r\n//         <button type=\"submit\">Add Comment</button>\r\n//       </form>\r\n//       {comments.map((comment) => (\r\n//         <Comment key={comment.id} comment={comment} />\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}