{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twta8\\\\OneDrive\\\\Desktop\\\\final project\\\\frontend\\\\src\\\\components\\\\Community.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Navbar from \"./Navbar\";\nimport Post from \"./Post\";\nimport Comment from \"./Comment\";\nimport \"./Community.css\";\nimport Footer from \"./Footer\";\n// function Community() {\n//     // const [userLogin, setUserLogin] = useState(\"\");\n//     const [posts, setPosts] = useState([]);\n//     const [comments, setcomments] = useState([]);\n//     const [userLogin, setUserLogin] = useState(\"\");\n// useEffect(() => {\n//   const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\n//   userData.forEach((user) => {\n//     setUserLogin(user.name);\n//     });\n//     axios.get('http://127.0.0.1:8000/comments/')\n//             .then((response) => setcomments(response.data))\n//             .catch((error) => console.error(error));\n\n//     axios.get('http://127.0.0.1:8000/posts/')\n//             .then((response) => setPosts(response.data))\n//             .catch((error) => console.error(error));\n//     }, []);\n//     const handlePostCreated = (post) => {\n//       setPosts([...posts, post]);\n//   };\n//   const handleCommentCreated = (comment) => {\n//     setcomments([...comments, comment]);\n// };\n//   return (\n//     <>\n//       <Navbar/>\n//         <>\n//         <Post onPostCreated={handlePostCreated} />\n//         <div className=\"contain\">\n//             {posts.map((post) => (\n//                 <div key={post.id}>\n//                     <p className=\"new\">Author:  {userLogin}</p>\n//                     <h2>{post.title}</h2>\n//                     <p>{post.content}</p>\n//                     <Comment onCommentCreated={handleCommentCreated}/>\n//                     <div className=\"com\">comments:\n//                       {comments.map((comment) => (\n//                         <div key={comment.id}>\n//                           <p className=\"new\">Author: unknown</p>\n//                           <p>{comment.content}</p>\n//                         </div>))}\n//                     </div>\n//                     <hr />\n//                 </div>\n\n//             ))}\n//         </div>\n//       </>\n//       <Footer/>\n//     </>\n//   );\n// }\n\n// export default Community;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommunityPage() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    // Fetch all posts from API\n    axios.get('http://127.0.0.1:8000/posts/').then(response => {\n      setPosts(response.data);\n    });\n  }, []);\n  function handleCommentSubmit(postId, e) {\n    e.preventDefault();\n\n    // Submit comment to API\n    axios.post(`http://127.0.0.1:8000/posts/${postId}/comments/`, {\n      content: newComment\n    }).then(response => {\n      // Add new comment to post in state\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        comments: [...post.comments, response.data]\n      } : post));\n      // Clear input field\n      setNewComment('');\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Community Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Posted by \", post.user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), post.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Commented by \", comment.user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleCommentSubmit(post.id, e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `comment-${post.id}`,\n          children: \"Add a comment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: `comment-${post.id}`,\n          value: newComment,\n          onChange: e => setNewComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunityPage, \"dRUr+zsa4qogovh3Ru+OnV2IyME=\");\n_c = CommunityPage;\nexport default CommunityPage;\nvar _c;\n$RefreshReg$(_c, \"CommunityPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navbar","Post","Comment","Footer","jsxDEV","_jsxDEV","CommunityPage","_s","posts","setPosts","newComment","setNewComment","get","then","response","data","handleCommentSubmit","postId","e","preventDefault","post","content","prevPosts","map","id","comments","children","fileName","_jsxFileName","lineNumber","columnNumber","title","user","name","comment","onSubmit","htmlFor","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/twta8/OneDrive/Desktop/final project/frontend/src/components/Community.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport Navbar from \"./Navbar\";\r\nimport Post from \"./Post\";\r\nimport Comment from\"./Comment\"\r\nimport \"./Community.css\"\r\nimport Footer from \"./Footer\";\r\n// function Community() {\r\n//     // const [userLogin, setUserLogin] = useState(\"\");\r\n//     const [posts, setPosts] = useState([]);\r\n//     const [comments, setcomments] = useState([]);\r\n//     const [userLogin, setUserLogin] = useState(\"\");\r\n// useEffect(() => {\r\n//   const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\r\n//   userData.forEach((user) => {\r\n//     setUserLogin(user.name);\r\n//     });\r\n//     axios.get('http://127.0.0.1:8000/comments/')\r\n//             .then((response) => setcomments(response.data))\r\n//             .catch((error) => console.error(error));\r\n\r\n//     axios.get('http://127.0.0.1:8000/posts/')\r\n//             .then((response) => setPosts(response.data))\r\n//             .catch((error) => console.error(error));\r\n//     }, []);\r\n//     const handlePostCreated = (post) => {\r\n//       setPosts([...posts, post]);\r\n//   };\r\n//   const handleCommentCreated = (comment) => {\r\n//     setcomments([...comments, comment]);\r\n// };\r\n//   return (\r\n//     <>\r\n//       <Navbar/>\r\n//         <>\r\n//         <Post onPostCreated={handlePostCreated} />\r\n//         <div className=\"contain\">\r\n//             {posts.map((post) => (\r\n//                 <div key={post.id}>\r\n//                     <p className=\"new\">Author:  {userLogin}</p>\r\n//                     <h2>{post.title}</h2>\r\n//                     <p>{post.content}</p>\r\n//                     <Comment onCommentCreated={handleCommentCreated}/>\r\n//                     <div className=\"com\">comments:\r\n//                       {comments.map((comment) => (\r\n//                         <div key={comment.id}>\r\n//                           <p className=\"new\">Author: unknown</p>\r\n//                           <p>{comment.content}</p>\r\n//                         </div>))}\r\n//                     </div>\r\n//                     <hr />\r\n//                 </div>\r\n                \r\n//             ))}\r\n//         </div>\r\n//       </>\r\n//       <Footer/>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Community;\r\n\r\n\r\nfunction CommunityPage() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch all posts from API\r\n    axios.get('http://127.0.0.1:8000/posts/').then((response) => {\r\n      setPosts(response.data);\r\n    });\r\n  }, []);\r\n\r\n  function handleCommentSubmit(postId, e) {\r\n    e.preventDefault();\r\n\r\n    // Submit comment to API\r\n    axios\r\n      .post(`http://127.0.0.1:8000/posts/${postId}/comments/`, { content: newComment })\r\n      .then((response) => {\r\n        // Add new comment to post in state\r\n        setPosts((prevPosts) =>\r\n          prevPosts.map((post) =>\r\n            post.id === postId\r\n              ? { ...post, comments: [...post.comments, response.data] }\r\n              : post\r\n          )\r\n        );\r\n        // Clear input field\r\n        setNewComment('');\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Community Page</h1>\r\n      {posts.map((post) => (\r\n        <div key={post.id}>\r\n          <h2>{post.title}</h2>\r\n          <p>{post.content}</p>\r\n          <p>Posted by {post.user.name}</p>\r\n          <h3>Comments:</h3>\r\n          {post.comments.map((comment) => (\r\n            <div key={comment.id}>\r\n              <p>{comment.content}</p>\r\n              <p>Commented by {comment.user.name}</p>\r\n            </div>\r\n          ))}\r\n          <form onSubmit={(e) => handleCommentSubmit(post.id, e)}>\r\n            <label htmlFor={`comment-${post.id}`}>Add a comment:</label>\r\n            <input\r\n              type=\"text\"\r\n              id={`comment-${post.id}`}\r\n              value={newComment}\r\n              onChange={(e) => setNewComment(e.target.value)}\r\n            />\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommunityPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}